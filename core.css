/******************************************************************
	FILE	        :	core.css
	AUTHOR	        :	#559
	LAST UPDATED	:	2024/10/12

	DESC	:
	core stylesheet including debug testing
	and base styles for all themes and layouts.

	this file called in base CSS file for
	theme/layout.

	GITHUB	:
	@import url("https://biwhaleshark.github.io/CSShiny/core.css");
******************************************************************/
@import url("https://pro.fontawesome.com/releases/v5.15.4/css/all.css");
:root:has(#layout-toggle:checked) html {
    font-size: 18px;
    box-sizing: border-box !important;
}
:root:has(#layout-toggle:checked) *,
:root:has(#layout-toggle:checked) ::before,
:root:has(#layout-toggle:checked) ::after {
    box-sizing: border-box !important;
}
:root:has(#layout-toggle:checked) body {
    overflow-x: hidden;
    margin: 0;
    padding: 0;
    color: #000;
    font-size: 1rem;
    line-height: 1;
    font-weight: 300;
    font-family: var(--text-font);
    text-rendering: optimizeLegibility;
}
:root:has(#layout-toggle:checked) .dev {
    border: 2px dashed red !important;
}
:root:has(#layout-toggle:checked) #bodyi,
:root:has(#layout-toggle:checked) #topbanneri,
:root:has(#layout-toggle:checked) #titleimg,
:root:has(#layout-toggle:checked) .trans {
    display: var(--image-display);
}
:root:has(#layout-toggle:checked) #content,
:root:has(#layout-toggle:checked) .sf-menu ul,
:root:has(#layout-toggle:checked) .ui-widget-header {
    background-image: var(--bg-image-display);
}
:root:has(#layout-toggle:checked) #topbanner,
:root:has(#layout-toggle:checked) .sf-menu,
:root:has(#layout-toggle:checked) #menu_holder,
:root:has(#layout-toggle:checked) #footer {
    display: var(--default-content);
}
:root:has(#layout-toggle:checked) .highlight_me,
:root:has(#layout-toggle:checked) .highlight_me td {
    background: transparent !important;
}
:root:has(#layout-toggle:checked) #cattery_infobox .add_small_margins,
:root:has(#layout-toggle:checked) #cattery_menu li,
:root:has(#layout-toggle:checked) .ui-widget-content,
:root:has(#layout-toggle:checked) .ui-widget-header,
:root:has(#layout-toggle:checked) .ui-state-active,
:root:has(#layout-toggle:checked) .ui-widget-content .ui-state-active,
:root:has(#layout-toggle:checked) .ui-widget-header .ui-state-active,
:root:has(#layout-toggle:checked) .mweorbox table tbody tr td div,
:root:has(#layout-toggle:checked) .tborder,
:root:has(#layout-toggle:checked) .ui-state-hover,
:root:has(#layout-toggle:checked) .ui-widget-content .ui-state-hover,
:root:has(#layout-toggle:checked) .ui-widget-header .ui-state-hover,
:root:has(#layout-toggle:checked) .ui-state-focus,
:root:has(#layout-toggle:checked) .ui-widget-content .ui-state-focus,
:root:has(#layout-toggle:checked) .ui-widget-header .ui-state-focus {
    border-color: transparent !important;
}
:root:has(#layout-toggle:checked) html,
:root:has(#layout-toggle:checked) body {
    background-color: #fff;
}
:root:has(#layout-toggle:checked) #contentholder form center .tborder {
    background-color: #fff;
    display: flex;
    width: 100% !important;
}
:root:has(#layout-toggle:checked) #contentholder form center .tborder tbody {
    display: flex;
    flex-direction: column;
    width: 100%;
}
:root:has(#layout-toggle:checked) .theader {
    background-color: var(--settings-bg-color) !important;
    display: flex;
    justify-content: center;
}
:root:has(#layout-toggle:checked) .theader td {
    color: var(--settings-text-color);
}
:root:has(#layout-toggle:checked) .trow1 {
    display: flex;
    justify-content: left;
    flex-wrap: wrap;
    color: #000;
}
:root:has(#layout-toggle:checked) .trow1 td {
    color: var(--text-dark);
    background-color: #fff;
    color: #000;
}
:root:has(#layout-toggle:checked) .trow1 td:nth-child(even) {
    width: 80%;
    text-align: left;
}
:root:has(#layout-toggle:checked) .trow1 td:nth-child(odd) {
    width: 20%;
    text-align: left;
}
:root:has(#layout-toggle:checked) input[type=text],
:root:has(#layout-toggle:checked) textarea,
:root:has(#layout-toggle:checked) textarea,
:root:has(#layout-toggle:checked) input[type=text],
:root:has(#layout-toggle:checked) input[type=password],
:root:has(#layout-toggle:checked) select,
:root:has(#layout-toggle:checked) input.pretty_dropdown_text,
:root:has(#layout-toggle:checked) .pretty_dropdown_options {
    width: 95%;
    float: left;
    background: #fff;
    color: #000;
}

:root:has(#layout-toggle:checked) .csshiny-inactive {
    display: block;
}
:root:has(#layout-toggle:checked) .csshiny-active {
    display: none;
}

:root:has(#off:checked) .csshiny-inactive {
    display: none;
}
:root:has(#off:checked) .csshiny-active {
    display: block;
}

.csshiny-signature {
    position: fixed;
    z-index: 999;
    bottom: 0;
    right: 0;
    padding: 10px;
    font-size: 2rem;
    line-height: 1;
    color: #fff;
}

.csshiny-credit {
    justify-content: center;
    align-items: center;
    color: #fff !important;
    text-align: center;
    /* Default to hidden */
    display: none;
    /* Overlay entire screen */
    position: fixed;
    z-index: 999;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* Translucent background */
    background: rgba(0, 0, 0, 0.85);
    /* Unhide the lightbox when it's the target */
}
.csshiny-credit:target {
    display: flex;
}
.csshiny-credit .csshiny-exit {
    position: fixed;
    bottom: 0;
    right: 0;
    padding: 10px;
    transform: translateY(-40px);
    font-size: 2rem;
    line-height: 1;
    color: #fff;
    padding: 14px;
}
.csshiny-credit .csshiny-exit::before {
    content: "ÔÅó";
    font-family: FontAwesome;
}
.csshiny-credit .csshiny-toggle {
    display: none;
}
.csshiny-credit span {
    /* Full width and height */
    display: block;
    width: 100%;
    height: 100%;
}

input[type=checkbox],
input[type=radio] {
    --active: #275efe;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, 0.3);
    --border: #bbc1e1;
    --border-hover: #275efe;
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
}
input[type=checkbox]:after,
input[type=radio]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
}
input[type=checkbox]:checked,
input[type=radio]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
}
input[type=checkbox]:disabled,
input[type=radio]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
}
input[type=checkbox]:disabled:checked,
input[type=radio]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
}
input[type=checkbox]:disabled + label,
input[type=radio]:disabled + label {
    cursor: not-allowed;
}
input[type=checkbox]:hover:not(:checked):not(:disabled),
input[type=radio]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
}
input[type=checkbox]:focus,
input[type=radio]:focus {
    box-shadow: 0 0 0 var(--focus);
}
input[type=checkbox]:not(.switch),
input[type=radio]:not(.switch) {
    width: 21px;
}
input[type=checkbox]:not(.switch):after,
input[type=radio]:not(.switch):after {
    opacity: var(--o, 0);
}
input[type=checkbox]:not(.switch):checked,
input[type=radio]:not(.switch):checked {
    --o: 1;
}
input[type=checkbox] + label,
input[type=radio] + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
}

input[type=checkbox]:not(.switch) {
    border-radius: 7px;
}
input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
}
input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
}
input[type=checkbox].switch {
    width: 38px;
    border-radius: 11px;
}
input[type=checkbox].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: var(--ab, var(--border));
    transform: translateX(var(--x, 0));
}
input[type=checkbox].switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
}
input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
}

input[type=radio] {
    border-radius: 50%;
}
input[type=radio]:after {
    width: 19px;
    height: 19px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, 0.7));
}
input[type=radio]:checked {
    --s: 0.5;
}
